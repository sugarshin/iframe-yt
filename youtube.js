// Generated by CoffeeScript 1.8.0
(function() {
  var EventEmitter2, YouTube, extend, inherits;

  extend = require('extend');

  inherits = require('inherits');

  EventEmitter2 = require('eventemitter2').EventEmitter2;

  YouTube = (function() {
    "use strict";
    var _apiLoaded;

    inherits(YouTube, EventEmitter2);

    _apiLoaded = false;

    YouTube.isAPILoaded = function() {
      return _apiLoaded;
    };

    (function() {
      var firstScriptTag, script;
      window.onYouTubeIframeAPIReady = function() {
        return _apiLoaded = true;
      };
      script = document.createElement('script');
      script.src = 'https://www.youtube.com/iframe_api';
      firstScriptTag = document.getElementsByTagName('script')[0];
      return firstScriptTag.parentNode.insertBefore(script, firstScriptTag);
    })();

    YouTube.prototype._defaults = {
      width: '640',
      height: '390',
      videoId: '',
      playerVars: null,
      onReady: function() {},
      onStateChange: function() {}
    };

    function YouTube(el, opts) {
      this.el = el;
      EventEmitter2.call(this);
      this.opts = extend({}, this._defaults, opts);
      this.id = this.el.id;
    }

    YouTube.prototype.create = function() {
      return this.player = new YT.Player(this.id, {
        width: this.opts.width,
        height: this.opts.height,
        videoId: this.opts.videoId,
        playerVars: this.opts.playerVars,
        events: {
          onReady: this.opts.onReady,
          onStateChange: this.opts.onStateChange
        }
      });
    };

    YouTube.prototype.play = function() {
      this.player.playVideo();
      this.emit('playvideo');
      return this;
    };

    YouTube.prototype.pause = function() {
      this.player.pauseVideo();
      this.emit('pausevideo');
      return this;
    };

    YouTube.prototype.stop = function() {
      this.player.stopVideo();
      this.emit('stopvideo');
      return this;
    };

    return YouTube;

  })();

  if (typeof define === 'function' && define.amd) {
    define(function() {
      return YouTube;
    });
  } else if (typeof module !== 'undefined' && module.exports) {
    module.exports = YouTube;
  } else {
    window.YouTube || (window.YouTube = YouTube);
  }

}).call(this);
